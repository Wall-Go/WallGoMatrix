permissions:
  contents: write
  deployments: write

name: Build and release
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check if WallGoMatrix version matches GitHub tag
        run: |
          WallGoMatrixVersion=$(sed -n 's/^\([[:space:]]*\)"Version" -> "\([^.]*\)\.\([^.]*\)\.\([^.]\)",/v\2.\3.\4/p' src/PacletInfo.m)

          if [ "$WallGoMatrixVersion" == "${{ github.ref }}" ]; then
              echo "WallGoMatrixVersion matches the tag"
          else
              echo "Error: WallGoMatrixVersion ($WallGoMatrixVersion) does not match tag (${{ github.ref }})" 1>&2
              exit 64
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Build Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p WallGoMatrix
          cp src/Kernel/*.m WallGoMatrix
          zip -r WallGoMatrix.zip WallGoMatrix/*
          rm -r WallGoMatrix
          ls -a

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./WallGoMatrix.zip
          asset_name: WallGoMatrix.zip
          asset_content_type: application/zip